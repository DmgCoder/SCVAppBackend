# Name of your application. Used to uniquely configure containers.
service: scvapp

# Name of the container image.
image: scvapp/scvappbackend

# Deploy to these servers.
servers:
  web:
    - 194.249.251.14
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: backend.app.scv.si
  # Proxy connects to your container on port 80 by default.
  app_port: 5050

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username: urbankrepel
  password:
    - GITHUB_TOKEN

# Configure builder setup.
builder:
  arch: amd64
# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
env:
  clear:
    NODE_ENV: production
  secret:
    - DB_HOST
    - DB_PORT
    - DB_USERNAME
    - DB_PASSWORD
    - DB_NAME
    - OAUTH_OBJECT_ID
    - OAUTH_APP_ID
    - OAUTH_AUTHORITY
    - OAUTH_APP_CLIENT_SECRET
    - OAUTH_SCOPES
    - OAUTH_REDIRECT_URI
    - JWT_PRIVATE_KEY
    - JWT_PUBLIC_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
ssh:
  user: scvapp
# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
boot:
  wait: 10
